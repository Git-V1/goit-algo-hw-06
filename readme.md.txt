#  Аналіз графа: Київський метрополітен (червона лінія)

##  Завдання 1: Побудова та аналіз графа

- Створено граф, що моделює червону лінію метро Києва.
- До графа додано станції та з’єднання з умовними вагами (час у хвилинах).
- Проведено аналіз: кількість вершин і ребер, ступінь вершин.
- Візуалізація побудована за допомогою `matplotlib`.

##  Завдання 2: Пошук шляхів (BFS та DFS)

Під час виконання пошуку шляху між станціями "Академмістечко" та 
"Лівобережна" ми використали два різні алгоритми: BFS (пошук у ширину) та DFS (пошук у глибину).

BFS пройшов граф по рівнях і повернув шлях із найменшою кількістю зупинок. 
Це пов'язано з тим, що BFS завжди знаходить найкоротший шлях у незважених графах за кількістю кроків (тобто вершин).

DFS натомість шукає шлях, заглиблюючись у граф, і тому повертає перший знайдений шлях без гарантії оптимальності. 
Він може бути довшим за кількістю зупинок або менш інтуїтивним, якщо існує коротший альтернативний маршрут.

Наприклад, у нашому випадку:

BFS: ["Академмістечко", ..., "Лівобережна"] (шлях з мінімальною кількістю пересадок)

DFS: можливо той самий або інший шлях — залежно від порядку обходу сусідів у графі

Алгоритм BFS застосовується тоді, коли потрібно знайти шлях найменшої довжини (без урахування ваг).

DFS — швидкий спосіб перевірити досяжність однієї вершини з іншої або дослідити структуру графа вглиб.


##  Завдання 3: Алгоритм Дейкстри

- До графа додано ваги (час у хвилинах між станціями).
- Знайдено найкоротші шляхи між усіма парами станцій за допомогою алгоритму Дейкстри.
- Результати виведені у вигляді: “від → до : час у хв”.